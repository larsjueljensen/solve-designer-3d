--------------------------------------------------------------------------------
--  Handler.......... : onCodeArchive
--  Author........... : 
--  Description...... : 
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
function MovingObject.onCodeArchive (  )
--------------------------------------------------------------------------------
	

	
-- local hUser = application.getCurrentUser()
-- local nNewCursorValueX, nNewCursorValueY = hud.getCursorPosition ( hUser )
-- 
-- --Save member variables
-- local nStartPosX = this.nCursorStartX ( )
-- local nStartPosY = this.nCursorStartY ( )
-- local nPreviousX = this.nPreviousCursorX ( )
-- local nPreviousY = this.nPreviousCursorY ( )
-- 
-- local nFactorX = (nNewCursorValueX - nStartPosX)/100
-- local nFactorY = (nNewCursorValueY - nStartPosY)/100
-- local nDt = application.getLastFrameTime ( )
--      
-- --     log.warning ( "Last franetime: ", nDt )
-- --     
-- --     --Get.cursor position offset value
-- local nTrgX = (nStartPosX/8)-100
-- local nTrgZ = (nStartPosY/-8)+100
--      
-- local nBtn = this.nButtonPressed ()
-- local hHitObject = this.hMovingObject ( )
-- local nObjX = this.nSelectedObjectTransX ( )
-- local nObjZ = this.nSelectedObjectTransZ ( )
-- local nFrameCounter = this.nFrameCount ( )
-- local nFactor = 10
-- local nMode = user.getAIVariable ( hUser,"ASPMain", "nControlMode" )
-- local b
-- local nFrames = 4 
-- 
-- local nFactorX = nNewCursorValueX - nStartPosX
-- local nFactorY = nNewCursorValueY - nStartPosY
-- local nRotValueY = (nNewCursorValueX-nStartPosX)*18--nObjRotY + nFactor
-- local nRotRoundY = math.roundToNearestInteger ( nRotValueY )
-- local nRotTempY = nRotRoundY/10
-- local nRotY = math.roundToNearestInteger ( nRotTempY )*10  
-- 
--   
-- 
--     
-- -- log.warning ( "nStartPosX = ", nStartPosX ) 
-- -- log.message ( "Member variable: ", this.hMovingObject ( ) )
-- -- log.message ( "local variable: ", hHitObject )
-- 
-- -- local hPlane, nHitDist, nHitSurfaceID, x, y, z = scene.getFirstHitColliderEx ( application.getCurrentUserScene ( ), nRayPntX, nRayPntY, nRayPntZ, nRayDirX, nRayDirY, nRayDirZ, 1000 )
-- -- log.message ( "X =", x ,", Y =", y, ", Z =", z )
-- -- 
-- log.message ( nPointX," - ", nPointY," - ", nDeltaX," - ", nDeltaY," - ", nRayPntX," - ", nRayPntY," - ", nRayPntZ," - ", nRayDirX," - ", nRayDirY," - ", nRayDirZ )
--  if ( this.hMovingObject ( ) )
-- then
-- 
-- local nObjRotX, nObjRotY, nObjRotZ = object.getRotation( hHitObject, object.kGlobalSpace )
-- local nCurrentTransX, nCurrentTransY,  nCurrentTransZ =  object.getTranslation ( hHitObject, object.kGlobalSpace )
-- local nUpdateX = this.nOffsetX ( ) - nObjX
-- local nUpdateZ = this.nOffsetZ ( ) - nObjZ
-- 
-- local hObject, nHitDist, nHitSurfaceID, x, y, z = scene.getFirstHitColliderEx ( application.getCurrentUserScene ( ), nRayPntX, nRayPntY, nRayPntZ, nRayDirX, nRayDirY, nRayDirZ, 100 )
--     
--     
-- --     
-- --     
-- --     log.message ( "Selection: ", hHitObject )
-- --     log.message ( "Button = ", nBtn )
-- --     log.message ( "X coord = ", nStartPosX , ",  Y coord = ", nStartPosY)
-- --     log.message ( "nMode = ", nMode )
-- --     
-- --     if nFrameCounter == nFrames --Regulate rotational speed interaction
-- --       then
-- --         this.nFrameCount (0)
-- --       else
-- --         nFrameCounter = nFrameCounter + 1
-- --         this.nFrameCount ( nFrameCounter )
-- --     end
-- -- 
-- --     
-- --     
-- --         
-- --     if (hHitObject)then
-- --     
-- --     local nObjRotX, nObjRotY, nObjRotZ = object.getRotation( hHitObject, object.kGlobalSpace )
-- --     local nCurrentTransX, nCurrentTransY,  nCurrentTransZ =  object.getTranslation ( hHitObject, object.kGlobalSpace )
-- --     local nUpdateX = this.nOffsetX ( ) - nObjX
-- --     local nUpdateZ = this.nOffsetZ ( ) - nObjZ
-- --     
-- --     local nFactorX = nNewCursorValueX - nStartPosX
-- --     local nFactorY = nNewCursorValueY - nStartPosY
-- --     local nRotValueY = (nNewCursorValueX-nStartPosX)*18--nObjRotY + nFactor
-- --     local nRotRoundY = math.roundToNearestInteger ( nRotValueY )
-- --     local nRotTempY = nRotRoundY/10
-- --     local nRotY = math.roundToNearestInteger ( nRotTempY )*10        
-- --             
-- --             log.message ( "Object translation nCurrentTransX = ", nCurrentTransX )
-- --             log.message ( "Object translation nCurrentTransY = ", nCurrentTransY )
-- --             log.message ( "Object translation nCurrentTransZ = ", nCurrentTransZ )
-- -- if hHitObject then
-- --                 local hPlane, nHitDist, nHitSurfaceID, x, y, z = scene.getFirstHitColliderEx ( application.getCurrentUserScene ( ), nRayPntX, nRayPntY, nRayPntZ, nRayDirX, nRayDirY, nRayDirZ, 100 )
-- --                 log.message ( "X =", x ,", Y =", y, ", Z =", z )
-- -- else
-- -- end
-- -- 
--     if  (nMode == 0)  then 
--         local nRotX, nRotY, nRotZ 
-- 
--         this.nRotationY ( nObjRotY )
--         if ( this.nFrameCount() == 0 )
--            then 
--                 if nNewCursorValueX < nPreviousX 
--                     then  
-- 
--                     object.rotateTo ( hHitObject , 0,180,0,object.kLocalSpace, 0.125)
--                 elseif nNewCursorValueX > nPreviousX 
--                     then
--                     object.rotateTo ( hHitObject, 0,-180,0,object.kLocalSpace, 0.125)
--                 end
--         end
--      end         
-- --    elseif nMode == 2 then
-- -- --         local hPlane, nHitDist, nHitSurfaceID, x, y, z = scene.getFirstHitColliderEx ( application.getCurrentUserScene ( ), nRayPntX, nRayPntY, nRayPntZ, nRayDirX, nRayDirY, nRayDirZ, 100 )
-- -- --         object.setTranslation ( hHitObject,  (x - nUpdateX) ,nCurrentTransY , z - nUpdateZ   , object.kGlobalSpace )
-- -- -- 
-- -- 
-- --         
-- --         log.message ( "Attempting to move object" )
-- -- 
-- --     
-- --         
-- 
-- -- end
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- -- 
-- --     --calculate offset for cursor interaction.
-- --     
-- --                 --temp test code
-- -- --     object.setTranslation ( this.hMovingObject ( ),  (x - nUpdateX) ,nCurrentTransY , (z - nUpdateZ)   , object.kGlobalSpace )
-- -- -- 
-- -- --             
-- -- --             if not this.bCollision ( ) 
-- -- --             then
-- -- --                 if  (nMode == 2)  then --(nBtn == 1)
-- -- --                     --object.setTranslation ( this.hMovingObject ( ),  (x - nUpdateX)*nFactor ,nCurrentTransY , (z - nUpdateZ)*nFactor   , object.kGlobalSpace )
-- -- --                     log.message ( "Attempting to move object" )
-- -- --                     log.message ( "X =", x ,", Y =", y, ", Z =", z )
-- -- --                 elseif nMode == 0 then 
-- -- --                     local nRotX, nRotY, nRotZ 
-- -- --                     this.nRotationY ( nObjRotY )
-- -- --                     
-- -- --                     
-- -- --                         
-- -- --                         if ( this.nFrameCount() == 0 )
-- -- --                             then
-- -- --                                 if nNewCursorValueX < nPreviousX 
-- -- --                                     then                                               
-- -- --                                         object.rotateTo ( hObject , 0,180,0,object.kLocalSpace, 0.125)
-- -- --                                 elseif nNewCursorValueX > nPreviousX 
-- -- --                                     then
-- -- --                                         object.rotateTo ( hObject, 0,-180,0,object.kLocalSpace, 0.125)
-- -- --                                 end
-- -- --                         end
-- -- --                     end
-- -- --                 end
-- -- --                 
-- -- --             end
-- -- --     
-- --     this.nPreviousCursorX ( nNewCursorValueX )
-- --     this.nPreviousCursorY ( nNewCursorValueY )
-- -- 
-- --     
--     --Match ToolBoxPosition with cursor
--     local hCursorTools = hud.getComponent ( hUser, "CursorHUD_1.ToolBox" )
--     if hCursorTools then
--     hud.setComponentPosition ( hCursorTools, nNewCursorValueX, nNewCursorValueY-10  )
--     else end
--     
-- -- --     if ( hHitObject )
-- -- --        then
-- -- --        
-- -- --         
-- -- --         if nBtn == 0 then
-- -- --             object.setTranslation ( hHitObject, x, y, z, object.kGlobalSpace )
-- -- --         else
-- -- --         end
-- -- --             this.hMovingObject ( nil )
-- -- --             
-- -- --             
-- -- -- --             hud.setComponentVisible ( hud.getComponent ( this.getUser ( ), "MovingObjectHUD.SelectCollider" ), false )
-- -- -- --             hud.setComponentVisible ( hud.getComponent ( this.getUser ( ), "MovingObjectHUD.PickObject" ), true )
-- -- -- --         end
-- -- -- --    else
-- -- -- --         local hObject = scene.getFirstHitSensor ( application.getCurrentUserScene ( ), nRayPntX, nRayPntY, nRayPntZ, nRayDirX, nRayDirY, nRayDirZ, 100 )
-- -- -- -- --         if ( hObject ~= nil )
-- -- -- -- --         then
-- -- -- -- --             this.hMovingObject ( hObject ) 
-- -- -- -- --             
-- -- -- -- --             hud.setComponentVisible ( hud.getComponent ( this.getUser ( ), "MovingObjectHUD.SelectCollider" ), true )
-- -- -- -- --             hud.setComponentVisible ( hud.getComponent ( this.getUser ( ), "MovingObjectHUD.PickObject" ), false )
-- -- -- -- --         end
-- -- --     end
-- -- --     
-- -- log.message ( "End: nNewCursorValueX = ",nNewCursorValueX )
-- -- log.message ( "End: nNewCursorValueY = ",nNewCursorValueY )
-- -- -- --------------------------------------------------------------------------------
-- end
-- --------------------------------------------------------------------------------
-- 
-- 	
--------------------------------------------------------------------------------
end
--------------------------------------------------------------------------------
